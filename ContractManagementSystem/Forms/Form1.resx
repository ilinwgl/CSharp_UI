<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NDX9D+GhXBbqZkmqAAAAAElFTkSuQmCC
</value>
  </data>
</root>